#
# .travis.yaml contains YAML-formatted (http://www.yaml.org/) build
# instructions for continuous integration via Travis CI
# (http://docs.travis-ci.com/).
#

notifications:
    email: false

language: c

matrix:
    include:
        # Linux x86, release
        - os: linux
          sudo: required
          dist: trusty
          env: OS_ID=0.4.4 BUILD_TYPE=RELEASE R3_CPP=0

        # Linux x86, release, build with CPP
        - os: linux
          sudo: required
          dist: trusty
          env: OS_ID=0.4.4 BUILD_TYPE=RELEASE R3_CPP=1

        # Linux x64, debug
        - os: linux
          sudo: required
          dist: trusty
          env: OS_ID=0.4.40 BUILD_TYPE=DEBUG R3_CPP=0

        # Linux x64, debug, build with CPP
        - os: linux
          sudo: required
          dist: trusty
          env: OS_ID=0.4.40 BUILD_TYPE=DEBUG R3_CPP=1

        # Linux x64, release
        - os: linux
          sudo: required
          dist: trusty
          env: OS_ID=0.4.40 BUILD_TYPE=RELEASE R3_CPP=0

        # Linux x64, release, build with CPP
        - os: linux
          sudo: required
          dist: trusty
          env: OS_ID=0.4.40 BUILD_TYPE=RELEASE R3_CPP=1

        # Windows x86, release
        #- OS_ID=0.3.1 REL=1 TOOLS=i686-w64-mingw32-
        # Windows x64, release
        #- OS_ID=0.3.40 REL=1 TOOLS=x86_64-w64-mingw32-
        - os: osx
          osx_image: xcode7.2
          env: OS_ID=0.2.5 BUILD_TYPE=RELEASE R3_CPP=0
        - os: osx
          osx_image: xcode7.2
          env: OS_ID=0.2.5 BUILD_TYPE=RELEASE R3_CPP=1
        - os: osx
          osx_image: xcode7.2
          env: OS_ID=0.2.40 BUILD_TYPE=DEBUG R3_CPP=0
        - os: osx
          osx_image: xcode7.2
          env: OS_ID=0.2.40 BUILD_TYPE=DEBUG R3_CPP=1

addons:
    apt:
        packages:
            # For building 32b binaries on a 64b host (not necessary when we
            # build for 64b):
            - gcc-multilib
            - g++-multilib

            # For cross-compiling to Windows.
            - binutils-mingw-w64-i686
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-i686
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-i686
            - g++-mingw-w64-x86-64
            - mingw-w64

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install cmake; fi

install:
    # Fetch a Rebol bootstrap binary, which is needed for building Rebol.
    #- wget http://www.rebol.com/r3/downloads/r3-a111-4-2.tar.gz
    #- tar xvzf r3-a111-4-2.tar.gz
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget http://www.rebolsource.net/downloads/experimental/r3-linux-x64-gbf237fc-static && cp r3-linux-x64-gbf237fc-static make/r3-make; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget http://rebolsource.net/downloads/experimental/r3-osx-x64-gbf237fc && cp r3-osx-x64-gbf237fc make/r3-make; fi
    - chmod +x make/r3-make

script:
    - cd make/
    # If REL is defined and not empty, we do a release build by compiling with
    # NDEBUG defined. (`${parameter+alt_value}` is a Bash-ism documented as:
    # "if parameter set, use alt_value, else use null string.")
    #- export CC="${TOOLS}${CC}${REL+ -DNDEBUG}"
    # We have to set REBOL_TOOL explicitly to circumvent the automatic r3-make
    # filename inference, as we always use a Linux r3-make, even when
    # cross-compiling to Windows.
    #- make -f makefile.boot REBOL_TOOL=r3-make OS_ID="${OS_ID}" CC="${CC}"
    - cmake -DR3_OS_ID="${OS_ID}" -DR3_EXTERNAL_FFI=0 -DR3_CPP="${R3_CPP}" -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" -DR3_WITH_TCC=1 -G "Unix Makefiles"
    - make r3-core VERBOSE=1
    # A minimal sanity check that the built R3 does _something_. Eventually, we
    # should run the full test suite.

    # Run once but don't pipe output, in case it prints out useful crash msg
    - if [ "${OS_ID}" = "0.4.40" ]; then ./r3-core --do 'print {OK}'; fi

    # Run a second time with piped output to return success/faiure to Travis
    - if [ "${OS_ID}" = "0.4.40" ]; then ./r3-core --do 'print {OK}' | grep OK; fi

    # Rename files before uploading
    - zip r3-core-${TRAVIS_COMMIT}-${OS_ID}-${BUILD_TYPE}-CPP${R3_CPP}.zip r3-core tcc/libtcc1.a

deploy:
  provider: releases
  api_key:
    secure: V6a5VzBv+ut3hKZKMmnuY4Urzc4QA/EBcfarve837q+7p9QgDseiuW93yUVys7LacIl8D6y13m71QBxzG6LC9WnttNgfy+PfyrMbWfaMvg9zLQQ1jTGKWjW6Fn4/xyU0NYyrjvgxW2itQ4/r9r0lcmKHbsAcm/ZhvLzg4o3dnc0=
  file:
      - r3-core-${TRAVIS_COMMIT}-${OS_ID}-${BUILD_TYPE}-CPP${R3_CPP}.zip
  skip_cleanup: true #or, Travis CI deletes all the files created during the build
  on:
    tags: true
